{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/core.module.ts","./src/app/core/errors/global-error-handler.ts","./src/app/core/errors/http-loading.interceptor.ts","./src/app/material.module.ts","./src/app/product-list/product-list.component.ts","./src/app/product-list/product-list.component.html","./src/app/product-list/product-list.module.ts","./src/app/shared/errors/error-dialog.service.ts","./src/app/shared/errors/error-dialog/error-dialog.component.ts","./src/app/shared/errors/error-dialog/error-dialog.component.html","./src/app/shared/loading/loading-dialog.service.ts","./src/app/shared/loading/loading-dialog/loading-dialog.component.ts","./src/app/shared/loading/loading-dialog/loading-dialog.component.html","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/","\r\n<div class=\"container\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n\r\n<!-- \r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n-->\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { CoreModule } from './core/core.module';\r\nimport { MaterialModule } from './material.module';\r\nimport { ProductListModule } from './product-list/product-list.module';\r\nimport { SharedModule } from './shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    ProductListModule,\r\n    CoreModule,\r\n    MaterialModule,\r\n    SharedModule,\r\n    RouterModule,\r\n  ],\r\n  declarations: [AppComponent],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/\r\n","import { CommonModule } from \"@angular/common\";\r\nimport { HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { ErrorHandler } from \"protractor/built/exitCodes\";\r\nimport { GlobalErrorHandler } from \"./errors/global-error-handler\";\r\nimport { HttpLoadingInterceptor } from \"./errors/http-loading.interceptor\";\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [CommonModule],\r\n  providers: [\r\n    {\r\n      // processes all errors\r\n      provide: ErrorHandler,\r\n      useClass: GlobalErrorHandler,\r\n    },\r\n    {\r\n      // interceptor to show loading spinner\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: HttpLoadingInterceptor,\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class CoreModule {}","import { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { ErrorHandler, Injectable, NgZone } from \"@angular/core\";\r\nimport { ErrorDialogService } from \"src/app/shared/errors/error-dialog.service\";\r\n\r\n@Injectable()\r\nexport class GlobalErrorHandler implements ErrorHandler {\r\n  constructor(\r\n    private errorDialogService: ErrorDialogService,\r\n    private zone: NgZone\r\n  ) {}\r\n\r\n  handleError(error: any) {\r\n    // Check if it's an error from an HTTP response\r\n    if (!(error instanceof HttpErrorResponse)) {\r\n      error = error.rejection; // get the error object\r\n    }\r\n    this.zone.run(() =>\r\n      this.errorDialogService.openDialog(\r\n        error?.message || 'Undefined client error',\r\n        error?.status\r\n      )\r\n    );\r\n\r\n    console.error('Error from global error handler', error);\r\n  }\r\n}","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { finalize, Observable } from \"rxjs\";\r\nimport { LoadingDialogService } from \"src/app/shared/loading/loading-dialog.service\";\r\n\r\n@Injectable()\r\nexport class HttpLoadingInterceptor implements HttpInterceptor {\r\n  constructor(private loadingDialogService: LoadingDialogService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    this.loadingDialogService.openDialog();\r\n    return next.handle(request).pipe(\r\n      finalize(() => {\r\n        this.loadingDialogService.hideDialog();\r\n      })\r\n    ) as Observable<HttpEvent<any>>;\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { ClipboardModule } from '@angular/cdk/clipboard';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CdkStepperModule } from '@angular/cdk/stepper';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    ClipboardModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ],\r\n})\r\nexport class MaterialModule {}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, NgZone } from '@angular/core';\r\n//import { ErrorDialogService } from '../shared/errors/error-dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-product-list',\r\n  templateUrl: './product-list.component.html',\r\n  styleUrls: ['./product-list.component.css'],\r\n})\r\nexport class ProductListComponent {\r\n  formData: any;\r\n  literal: string = 'Een lange tekst...';\r\n  tekst: string = 'Een tekst';\r\n  janee: boolean = true;\r\n  datum: Date = new Date();\r\n  tijd: Date = new Date();\r\n  error: string = '';\r\n\r\n  constructor(\r\n    private http: HttpClient \r\n    // private errorDialogService: ErrorDialogService,\r\n    // private zone: NgZone\r\n  ) {}\r\n\r\n  submit() {\r\n    const vm: any = {\r\n      tekst: this.tekst,\r\n      janee: this.janee,\r\n      datum: new Date(\r\n        this.datum.getFullYear(),\r\n        this.datum.getMonth()-1,\r\n        this.datum.getDate(),\r\n        this.tijd.getHours(),\r\n        this.tijd.getMinutes(),\r\n        this.tijd.getSeconds(),\r\n      )\r\n    };\r\n\r\n    this.formData = JSON.stringify(vm);\r\n  }\r\n\r\n  reset() {\r\n    this.tekst = '';\r\n    this.janee = true;\r\n    this.datum = new Date();\r\n  }\r\n\r\n  localError() {\r\n    throw Error('The app component has thrown an error!');\r\n  }\r\n\r\n  failingRequest() {\r\n    this.http.get('https://httpstat.us/404?sleep=2000').toPromise();\r\n  }\r\n\r\n  successfulRequest() {\r\n    this.http.get('https://httpstat.us/200?sleep=2000').toPromise();\r\n  }\r\n\r\n  // toDateInputValue: (): string => '';DatePipe.prototype.toDateInputValue = (function() {\r\n  //   var local = new Date(this);\r\n  //   local.setMinutes(this.getMinutes() - this.getTimezoneOffset());\r\n  //   return local.toJSON().slice(0,10);\r\n  // });\r\n}\r\n","<h2>Form</h2>\r\n<div>\r\n  <p class=\"error\">\r\n    {{ error }}\r\n  </p>\r\n  <p>\r\n    {{ literal }}\r\n  </p>\r\n  <div>\r\n    <label>Tekst:</label>\r\n    <input type=\"text\" [(ngModel)]=\"tekst\" change=\"update()\" />\r\n  </div>\r\n  <div>\r\n    <label>Ja/Nee:</label>\r\n    <input type=\"checkbox\" [(ngModel)]=\"janee\" change=\"update()\" />\r\n  </div>\r\n  <div>\r\n    <label>Datum:</label>\r\n    <input type=\"date\" [(ngModel)]=\"datum\" change=\"update()\" />\r\n    <input type=\"time\" [(ngModel)]=\"tijd\" change=\"update()\" />\r\n  </div>\r\n  <button (click)=\"submit()\">Send</button>\r\n  <button (click)=\"reset()\">Reset</button>\r\n</div>\r\n<div>\r\n  {{ formData }}\r\n</div>\r\n\r\n<button mat-raised-button (click)=\"localError()\">Local front end error</button>\r\n<button mat-raised-button (click)=\"failingRequest()\">Server request with error</button>\r\n<button mat-raised-button (click)=\"successfulRequest()\">Successful request showing loading spinner</button>\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ProductListComponent } from './product-list.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    FormsModule,\r\n    RouterModule.forRoot([{ path: '', component: ProductListComponent }]),\r\n  ],\r\n  declarations: [ProductListComponent],\r\n})\r\nexport class ProductListModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ErrorDialogComponent } from './error-dialog/error-dialog.component';\r\n\r\n@Injectable()\r\nexport class ErrorDialogService {\r\n  private opened = false;\r\n\r\n  constructor(private dialog: MatDialog) {}\r\n\r\n  openDialog(message: string, status?: number): void {\r\n    if (!this.opened) {\r\n      this.opened = true;\r\n      const dialogRef = this.dialog.open(ErrorDialogComponent, {\r\n        data: { message, status },\r\n        maxHeight: '100%',\r\n        width: '540px',\r\n        maxWidth: '100%',\r\n        disableClose: true,\r\n        hasBackdrop: true,\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe(() => {\r\n        this.opened = false;\r\n      });\r\n    }\r\n  }\r\n}","import { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-error-dialog',\r\n  templateUrl: './error-dialog.component.html',\r\n  styleUrls: ['./error-dialog.component.css'],\r\n})\r\nexport class ErrorDialogComponent {\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA)\r\n    public data: { message: string; status?: number }\r\n  ) {}\r\n}\r\n","<h1 mat-dialog-title>An error has occurred!</h1>\r\n<div mat-dialog-content>\r\n  <p *ngIf=\"data.status\">\r\n    <b>Status Code: {{ data.status }}</b>\r\n  </p>\r\n  <p>Something went wrong!</p>\r\n  <p class=\"error-message\">\r\n    {{ data?.message }}\r\n  </p>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-raised-button mat-dialog-close color=\"primary\">Close</button>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { LoadingDialogComponent } from './loading-dialog/loading-dialog.component';\r\n\r\n@Injectable()\r\nexport class LoadingDialogService {\r\n  private opened = false;\r\n  private dialogRef!: MatDialogRef<LoadingDialogComponent>;\r\n\r\n  constructor(private dialog: MatDialog) {}\r\n\r\n  openDialog(): void {\r\n    if (!this.opened) {\r\n      this.opened = true;\r\n      this.dialogRef = this.dialog.open(LoadingDialogComponent, {\r\n        data: undefined,\r\n        maxHeight: '100%',\r\n        width: '400px',\r\n        maxWidth: '100%',\r\n        disableClose: true,\r\n        hasBackdrop: true,\r\n      });\r\n\r\n      this.dialogRef.afterClosed().subscribe(() => {\r\n        this.opened = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  hideDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loading-dialog',\r\n  templateUrl: './loading-dialog.component.html',\r\n  styleUrls: ['./loading-dialog.component.css'],\r\n})\r\nexport class LoadingDialogComponent {\r\n  constructor() {}\r\n}\r\n","<h1 mat-dialog-title>Loading data</h1>\r\n<div mat-dialog-content>Please have a moment of patience</div>\r\n<div mat-dialog-actions>\r\n  <div class=\"loading-spinner\">\r\n    <mat-spinner diameter=\"40\" strokeWidth=\"2\"></mat-spinner>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { LoadingDialogComponent } from './loading/loading-dialog/loading-dialog.component';\r\nimport { ErrorDialogComponent } from './errors/error-dialog/error-dialog.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ErrorDialogService } from './errors/error-dialog.service';\r\nimport { LoadingDialogService } from './loading/loading-dialog.service';\r\nimport { MaterialModule } from '../material.module';\r\n\r\nconst sharedComponents = [LoadingDialogComponent, ErrorDialogComponent];\r\n\r\n@NgModule({\r\n  declarations: [...sharedComponents],\r\n  imports: [CommonModule, RouterModule, MaterialModule],\r\n  exports: [...sharedComponents],\r\n  providers: [ErrorDialogService, LoadingDialogService],\r\n  entryComponents: [...sharedComponents],\r\n})\r\nexport class SharedModule {}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/"],"names":[],"sourceRoot":"webpack:///"}